@{
    ViewBag.Title = "写博客";
    Layout = "~/views/shared/Index_Top_Layout.cshtml";
    
}

@using MonkeyBlog;

@{
   
    List<Backstage_Category> _bclist = ViewBag._bclist as List<Backstage_Category>;

    List<Category> clist = ViewBag.clist as List<Category>;
}


<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<link href="~/content/bs/css/bootstrap.css" rel="stylesheet" />
<link href="~/Content/CSS/open_close_btn/open_close_btn.css" rel="stylesheet" />
<script src="~/content/bs/js/jquery.min.js"></script>
<script src="~/content/bs/js/bootstrap.js"></script>
<script src="~/content/utf8-net/ueditor.config.js"></script>
<script type="text/javascript" charset="utf-8" src="~/content/utf8-net/ueditor.all.min.js"> </script>
<!--建议手动加在语言，避免在ie下有时因为加载语言失败导致编辑器加载失败-->
<!--这里加载的语言文件会覆盖你在配置项目里添加的语言类型，比如你在配置项目里配置的是英文，这里加载的中文，那最后就是中文-->
<script src="~/content/utf8-net/lang/zh-cn/zh-cn.js"></script>
<script src="~/Content/JS/My/jQuery-Jsonp2.js"></script>
<script src="~/Content/JS/My/jQuery-Jsonp.js"></script>

<style type="text/css">
    div {
        width: 100%;
    }

    .baioqian {
        width: 13px;
        height: 13px;
        background-color: deepskyblue;
        text-align: center;
        line-height: 13px;
        border-radius: 3px;
    }

    .chkdiv {
        margin-top: 20px;
        font-size: 15px;
    }

    .divbtn {
        height: 40px;
        border: 1px solid red;
        line-height: 40px;
        text-align: center;
        color: red;
        border-radius: 5px;
    }

    .inputtext {
        width: 15px;
        height: 18px;
        font-size: 15px;
        border: 0px;
        background-color: lightgray;
    }

    .inputi {
        font-weight: lighter;
        font-size: 13px;
        color: lightgray;
    }
</style>

<script>
    $(function () {
        //得到字体宽度的方法
        var textWidth = function (text) {
            var sensor = $('<pre>' + text + '</pre>').css({ display: 'none' });
            $('body').append(sensor);
            var width = sensor.width();
            sensor.remove();
            return width;
        };

        //点击添加标签
        $("#Tag").on("click", function () {
            //得到添加标签的上一级
            var thisspan = $(this).prev();
            //得到添加标签的上一级的HTML
            var thisspanhtml = $(this).prev().html();

            //判断是哦否已有标签的存在
            if ($(".Write_Labeli").length >= 1) {
                //遍历类名为inputtext的文本框
                $(".Write_Label").each(function (index, item) {
                    //判断文本框是否为空
                    if ($.trim($(item).val()) == "" || $.trim($("item").val()) == null) {
                        //移除为空的文本框的父级HTML
                        $(item).parent().remove();
                    }
                });

            }
            //判断已有几个标签
            if ($(".Write_Labeli").length >= 5) {
                alert("最多只能添加5个文章标签");
                return;
            }

            //添加标签
            thisspan.append("<span><input type='text'class='inputtext Write_Label' name='Write_Label'/> <i class ='glyphicon glyphicon-remove inputi Write_Labeli'></i>&nbsp;</span>");

            //给文本框设置最大字符长度
            $(".Write_Label").prop("maxlength", "30");

            //文本框输入时大小跟随输入的字符变化
            //$(".Write_Label").unbind('keydown').bind('keydown', function () {
            //    $(this).width(textWidth($(this).val()));
            //});
            //文本框输入时大小跟随输入的字符变化
            $(".Write_Label").keyup(function (event) {


                $(this).width(textWidth($(this).val()) + 35);

                //if ($(this).text().length() == 35) {
                //    alert("文章标签最多只能输入35个字符");
                //    return;
                //}
                //判断文本框的宽度是否小于16,文本是否为空
                if ($.trim($(this).val()) == null || $.trim($(this).val()) == "" || $(this).width() <= 16) {
                    //设置文本框的宽度为16
                    $(this).width(16);
                }

            });

            //点击标签i时
            $(".Write_Labeli").on("click", function () {
                //移除该标签的上一级HTML
                $(this).parent().remove();
            });

        });

        //点击添加分类
        $("#personTag").on("click", function () {

            //得到添加标签的上一级
            var thisspan = $(this).prev();
            //得到添加标签的上一级的HTML
            var thisspanhtml = $(this).prev().html();

            //判断是否已有标签的存在
            if ($(".Category_Typei").length >= 1) {
                //遍历类名为inputtext的文本框
                $(".Category_Type").each(function (index, item) {
                    //判断文本框是否为空
                    if ($.trim($(item).val()) == "" || $.trim($("item").val()) == null) {
                        //移除为空的文本框的父级HTML
                        $(item).parent().remove();
                    }
                });

            }

            //判断已有几个标签
            if ($(".Category_Typei").length >= 5) {
                alert("一次最多只能添加5个自定义分类");
                return;
            }

            //添加标签
            thisspan.append("<span><input type='text'class='inputtext Category_Type' name='Category_Type'/> <i class ='glyphicon glyphicon-remove inputi Category_Typei'></i>&nbsp;</span>");

            //给文本框设置最大字符长度
            $(".Category_Type").prop("maxlength", "20");


            //文本框输入时大小跟随输入的字符变化
            $(".Category_Type").keyup(function (event) {

                $(this).width(textWidth($(this).val()) + 35);
                //判断文本框的宽度是否小于16,文本是否为空
                if ($.trim($(this).val()) == null || $.trim($(this).val()) == "" || $(this).width() <= 16) {
                    //设置文本框的宽度为16
                    $(this).width(16);
                }

            });

            //点击标签i时
            $(".Category_Typei").on("click", function () {
                //移除该标签的上一级HTML
                $(this).parent().remove();
            });

        });


        //悬浮时
        $(".divbtn").mouseover(function () {

            $(this).css("background-color", "#f00");
            $(this).css("color", "white");

        });

        //离开时
        $(".divbtn").mouseleave(function () {
            $(this).css("background-color", "transparent");
            $(this).css("color", "red");
        });

        $("#cancel").mouseover(function () {
            $(this).css("background-color", "gray");
            $(this).css("color", "white");
        });

        $("#cancel").mouseleave(function () {
            $(this).css("background-color", "transparent");
            $(this).css("color", "gray");
        });



        //验证博客的方法
        var sub = function (Write_IsDel) {
            if ($("#Write_ArticleType").val() == "-1") {
                alert("请选择文章类型");
                $("#Write_ArticleType").focus();
                return;
            }
            if ($("#Write_Title").val() == null || $("#Write_Title").val() == "") {
                alert("请输入文章标题");
                $("#Write_Title").focus();
                return;
            }

            var ue = UE.getEditor('editor');

            //判断文章内容是否为空
            if ($.trim(ue.getContent()) == null || $.trim(ue.getContent()) == "") {
                alert("请输入文章内容");
                ue.setFocus();
                return;
            }

            if ($(".Write_Labeli").length < 1) {
                alert("请添加文章标签");
                return;
            }

            var flag = true;
            //遍历文章标签
            $(".Write_Label").each(function (index, item) {
                //判断是否为空
                if ($.trim($(item).val()) == "" || $.trim($(item).val()) == null) {
                    flag = false;
                }
            });

            if (flag == false) {
                alert("文章标签不能为空");
                return;
            }

            var flag2 = true;
            if ($(".Write_Label").length >= 1) {
                for (var i = 0; i < $(".Write_Label").length; i++) {
                    for (var j = i + 1; j < $(".Write_Label").length; j++) {
                        //判断文章标签的名称是否一样
                        if ($.trim($($(".Write_Label")[i]).val()) == $.trim($($(".Write_Label")[j]).val())) {
                            flag2 = false;
                            i = $(".Write_Label").length;
                            j = $(".Write_Label").length;
                        }

                    }
                }
            }

            if (flag2 == false) {
                alert("添加的文章标签不能相同");
                return;
            }


            if ($(".Category_Typei").length < 1 && $(".Category_Id").parent().find("input[type='checkbox']:checked").length < 1) {
                alert("请添加或选择个人分类");
                return;
            }

            //判断是否添加了新的个人分类
            if ($(".Category_Typei").length >= 1 && ($.trim($($(".Category_Type")[0]).val()) == "" || $.trim($($(".Category_Type")[0]).val()) == null)) {

                alert("请在个人分类中输入内容");
                return;
            }

            var flag = true;
            if ($(".Category_Typei").length >= 1) {
                for (var i = 0; i < $(".Category_Type").length; i++) {
                    for (var j = i + 1; j < $(".Category_Type").length; j++) {
                        //判断自定义个人分类的名称是否一样
                        if ($.trim($($(".Category_Type")[i]).val()) == $.trim($($(".Category_Type")[j]).val())) {
                            flag = false;
                            i = $(".Category_Type").length;
                            j = $(".Category_Type").length;
                        }

                    }
                }
            }


            if (flag == false) {
                alert("添加新的个人分类时不能有相同的个人分类名称");
                return;
            }




            if ($("#Backstage_Category_Id").val() == "-1") {
                alert("请选择博客分类");
                $("#Backstage_Category_Id").focus();
                return;
            }

            $("#Write_Private").val("1");
            //判断是否私有是否选中
            if ($("#Write_Private").prop("checked") == true) {
                $("#Write_Private").val("0");

            }


            var way = true;
            //判断是否添加了新的个人分类
            if ($(".Category_Typei").length <= 0) {
                way = false;
            }


            var Category_Idstr = "";
            //遍历选中的自定义分类
            $(".Category_Id").parent().find("input[type='checkbox']:checked").each(function (index, item) {
                Category_Idstr += $(item).val();
                //判断是否是最后一个
                if (index + 1 != $(".Category_Id").parent().find("input[type='checkbox']:checked").length) {

                    Category_Idstr += ",";
                }

            });

            var data = $("#form1").serializeArray();
            console.log($.myJsonp3(data));

            //提交到后台
            $.post("/WriteBlog/PublishWriteBlog", { json: $.myJsonp3(data), Category_Idstr: Category_Idstr, Write_Content: ue.getContent(), Write_Private: $("#Write_Private").val(), Category_Type_way: way, Write_IsDel: Write_IsDel }, function (res) {

                if (res >= 1) {
                    location.href = "/PersonalBlog/PersonalBlogIndex";
                } else {
                    alert(res);
                }

            });

        };

        //点击发布
        $("#publish").click(function () {

            sub($(this).attr("value"));
        });

        //保存
        $("#save").click(function () {

            sub($(this).attr("value"));
        });



    });
</script>



@*@Html.Partial("~/Views/Share/Top_Partial.cshtml")*@

<form id="form1" method="post" enctype="multipart/form-data">
    <div class="container" style=" margin-top: 30px;">
        <div class="col-md-12">
            <div class="col-md-1">
            </div>
            <div class="col-md-10" style="background-color: white">
                <div class="col-md-12" style="margin-bottom: 15px; margin-left: 18px; height: 60px;">

                    <select id="Write_ArticleType" name="Write_ArticleType" class="col-md-2" style="height: 35px; margin-right: 20px; margin-top: 10px;">
                        <option value="-1">请选择</option>
                        <option value="0">原创</option>
                        <option value="1">转载</option>
                        <option value="2">翻译</option>
                    </select>
                    <input type="text" class="col-md-9" id="Write_Title" name="Write_Title" placeholder="输入文章标题" style="height: 35px; margin-top: 10px" />
                </div>
                <div class="col-md-12">
                    <script id="editor" type="text/plain" class="col-md-12" style="height: 400px"></script>
                </div>
                <div class="col-md-12">

                    <div class="col-md-12" style="margin-top: 20px">
                        <div class="col-md-12">
                            <span>文章标签：</span><span id="Tag"><i class="glyphicon glyphicon-plus baioqian" style="color: white; font-size: 12px;"></i><span style="color: deepskyblue; margin-left: 10px; font-size: 14px">添加标签 </span>
                            </span>
                        </div>

                        <div class="col-md-9">
                            <div class="col-md-1"></div>
                            <div class="col-md-11" style="color: gray; font-size: 12px">
                                文章标签（添加Tag，你的内容能被更多人看到）,最多添加5个标签，支持逗号和回车分隔
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12" style="margin-top: 20px">
                        <div class="col-md-12">
                            <span>个人分类：</span><a id="personTag"><i class="glyphicon glyphicon-plus baioqian" style="color: white; font-size: 12px;"></i><span href="#" style="color: deepskyblue; margin-left: 10px; font-size: 14px">添加新分类</span></a>
                        </div>
                        <div class="col-md-9">
                            <div class="col-md-1"></div>
                            <div class="col-md-10" style="color: gray; font-size: 12px" id="">
                                @foreach (var item in clist)
                                {
                                    <div class="col-md-6 chkdiv Category_Id">
                                        <input type="checkbox" name="Category_Idstr"  id="Category_Id@(item.Category_Id)" value="@item.Category_Id" />
                                        <label for=" Category_Id@(item.Category_Id)">@item.Category_Type</label>
                                    </div>
                                }


                            </div>
                        </div>
                    </div>
                    <div class="col-md-12" style="margin-top: 20px;">
                        <div class="col-md-12">
                            博客分类： 
                        <select id="Backstage_Category_Id" name="Backstage_Category_Id" style="width: 150px; height: 35px">
                            <option value="-1">请选择</option>
                            @foreach (var item in _bclist)
                            {
                                <option value="@item.Backstage_Category_Id">@item.Backstage_Category_Type</option>
                            }

                        </select>
                        </div>

                    </div>
                    <div class="col-md-12" style="margin-top: 20px; margin-bottom: 50px">
                        <div class="col-md-12">
                            @* <div class="fields__item">*@是否私密：
        	<input type="checkbox" class="uiswitch"  value="1" id="Write_Private" name="Write_Private" style="margin-bottom:-10px;">
                            @*	</div>*@
                        </div>

                    </div>

                    <div class="col-md-12" style="margin-bottom: 70px; margin-top: 20px">
                        <div class="col-md-1"></div>

                        <div class="col-md-2">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-11 divbtn" id="publish" value="2">
                                发表博客
                              
                            </div>

                        </div>
                        <div class="col-md-1"></div>

                        <div class="col-md-2">
                            <div class="col-md-1">
                            </div>
                            <div class="col-md-11 divbtn" id="save" value="1">
                                保存草稿
                                
                            </div>

                        </div>

                        <div class="col-md-2">
                            <div class="col-md-1"></div>
                            <div class="col-md-8 divbtn" style="border: 1px solid gray; color: gray" id="cancel">
                                返回
                           
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-1">
            </div>
        </div>
    </div>
</form>


<script type="text/javascript">


    //实例化编辑器
    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
    var ue = UE.getEditor('editor');

    //编辑器是否获得焦点
    function isFocus(e) {
        s
        alert(UE.getEditor('editor').isFocus());
        UE.dom.domUtils.preventDefault(e)
    }

    //编辑器失去焦点
    function setblur(e) {
        UE.getEditor('editor').blur();
        UE.dom.domUtils.preventDefault(e)
    }

    //插入给定的内容
    function insertHtml() {
        var value = prompt('插入html代码', '');
        UE.getEditor('editor').execCommand('insertHtml', value)
    }

    //创建编辑器
    function createEditor() {
        enableBtn();
        UE.getEditor('editor');
    }

    //获得整个html的内容
    function getAllHtml() {
        alert(UE.getEditor('editor').getAllHtml())
    }

    //获得内容
    function getContent() {
        var arr = [];
        arr.push("使用editor.getContent()方法可以获得编辑器的内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getContent());
        alert(arr.join("\n"));
    }

    //获得带格式的纯文本
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getPlainTxt());
        alert(arr.join('\n'))
    }

    //写入内容setContent()（或追加内容setContent(true)）
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
        UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
        alert(arr.join("\n"));
    }
   
    //不可编辑
    function setDisabled() {
        UE.getEditor('editor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    //可以编辑
    function setEnabled() {
        UE.getEditor('editor').setEnabled();
        enableBtn();
    }

    //获得当前选中的文本
    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UE.getEditor('editor').selection.getRange();
        range.select();
        var txt = UE.getEditor('editor').selection.getText();
        alert(txt)
    }

    //获得纯文本
    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UE.getEditor('editor').getContentTxt());
        alert(arr.join("\n"));
    }

    //判断是否有内容
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UE.getEditor('editor').hasContents());
        alert(arr.join("\n"));
    }

    //使编辑器获得焦点
    function setFocus() {
        UE.getEditor('editor').focus();
    }

    //删除编辑器
    function deleteEditor() {
        disableBtn();
        UE.getEditor('editor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }

    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
        }
    }

    //获取草稿箱内容
    function getLocalData() {
        alert(UE.getEditor('editor').execCommand("getlocaldata"));
    }

    //清空草稿箱
    function clearLocalData() {
        UE.getEditor('editor').execCommand("clearlocaldata");
        alert("已清空草稿箱");
    }
</script>

@*  <button onclick=" UE.getEditor('editor').setHide()">隐藏编辑器</button>
    <button onclick=" UE.getEditor('editor').setShow()">显示编辑器</button>
    <button onclick=" UE.getEditor('editor').setHeight(300)">设置高度为300默认关闭了自动长高</button>*@